---
import type { CollectionEntry } from "astro:content";
import type { Page } from "astro";

import ListPostCover from "@/components/ListPostCover.astro";
import Link from "../components/Link.astro";
import RootLayout from "./Layout.astro";
import Tag from "../components/Tag.astro";
import Pagination from "../components/Pagination.astro";
import FormattedDate from "../components/FormattedDate.astro";

interface Props {
  title: string;
  description: string;
  titleTemplate?: string;
  page: Page<CollectionEntry<"blog">>;
  robots?: string;
}

const { title, description, page, robots, titleTemplate } = Astro.props;
const hasDefaultSlot = Astro.slots.has("default");
---

<RootLayout {title} {description} {robots} {titleTemplate}>
  <div class="w-full max-w-6xl px-4 mx-auto sm:px-6">
    <div class="divide-y divide-gray-200 dark:divide-gray-700">
      <div class="space-y-2 pb-8 pt-6 md:space-y-5">
        <h1
          transition:name={title}
          class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
        >
          {title}
        </h1>
        {
          hasDefaultSlot && (
            <div class="prose dark:prose-invert py-4">
              <slot />
            </div>
          )
        }
      </div>

      {
        !page.data.length && (
          <div class="py-10 text-center">
            <p class="text-lg text-gray-600 dark:text-gray-400">
              No posts found.
            </p>
          </div>
        )
      }

      <div class="grid gap-8 pt-6">
        {
          page.data.map((post) => {
            const {
              id: slug,
              data: { title, summary, tags, date },
            } = post;
            return (
              <article class="group relative rounded-lg overflow-hidden hover:shadow-md transition-all duration-300 border border-gray-100 dark:border-gray-800">
                <div class="md:flex">
                  <div class="md:w-1/3 lg:w-1/4">
                    <div class="h-full">
                      <ListPostCover {post} class="h-full" />
                    </div>
                  </div>
                  <div class="p-5 md:p-6 md:w-2/3 lg:w-3/4 flex flex-col justify-between">
                    <div>
                      <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 mb-2">
                        <span class="inline-block bg-primary-100 dark:bg-primary-900/30 text-primary-800 dark:text-primary-300 text-xs px-2 py-1 rounded">
                          <FormattedDate date={date} />
                        </span>
                        <span class="hidden md:inline">â€¢</span>
                        <div class="hidden md:flex flex-wrap gap-2">
                          {tags.map(({ id: slug }) => (
                            <Tag slug={slug} />
                          ))}
                        </div>
                      </div>

                      <h2 class="text-xl md:text-2xl font-bold leading-tight mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300">
                        <Link
                          transition:name={title}
                          href={`/blog/${slug}`}
                          class="text-gray-900 dark:text-gray-100"
                        >
                          {title}
                        </Link>
                      </h2>

                      <div class="prose-sm md:prose max-w-none text-gray-600 dark:text-gray-400 line-clamp-3">
                        {summary}
                      </div>
                    </div>

                    <div class="mt-4 md:hidden flex flex-wrap gap-2">
                      {tags.map(({ id: slug }) => (
                        <Tag slug={slug} />
                      ))}
                    </div>

                    <div class="mt-4">
                      <Link
                        href={`/blog/${slug}`}
                        class="inline-flex items-center text-sm font-medium text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300"
                      >
                        Read more
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          class="ml-1 h-4 w-4"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M14 5l7 7m0 0l-7 7m7-7H3"
                          />
                        </svg>
                      </Link>
                    </div>
                  </div>
                </div>
              </article>
            );
          })
        }
      </div>

      {
        (page?.url?.next || page?.url?.prev) && (
          <div class="pt-6">
            <Pagination page={page} />
          </div>
        )
      }
    </div>
  </div>
</RootLayout>
